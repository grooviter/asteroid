memberSearchIndex = [{"p":"asteroid","c":"A","l":"A()","url":"%3Cinit%3E()"},{"p":"asteroid.transformer","c":"AbstractClassNodeTransformer","l":"AbstractClassNodeTransformer(SourceUnit, Closure<Boolean>)","url":"%3Cinit%3E(org.codehaus.groovy.control.SourceUnit,groovy.lang.Closure)"},{"p":"asteroid.transformer","c":"AbstractExpressionTransformer","l":"AbstractExpressionTransformer(Class<T>, SourceUnit, Closure<Boolean>)","url":"%3Cinit%3E(java.lang.Class,org.codehaus.groovy.control.SourceUnit,groovy.lang.Closure)"},{"p":"asteroid.transformer","c":"AbstractExpressionTransformer","l":"AbstractExpressionTransformer(Class<T>, SourceUnit)","url":"%3Cinit%3E(java.lang.Class,org.codehaus.groovy.control.SourceUnit)"},{"p":"asteroid","c":"AbstractGlobalTransformation","l":"AbstractGlobalTransformation()","url":"%3Cinit%3E()"},{"p":"asteroid","c":"AbstractLocalTransformation","l":"AbstractLocalTransformation()","url":"%3Cinit%3E()"},{"p":"asteroid","c":"AbstractLocalTransformation","l":"AbstractLocalTransformation(Class<T>)","url":"%3Cinit%3E(java.lang.Class)"},{"p":"asteroid.transformer","c":"AbstractMethodNodeTransformer","l":"AbstractMethodNodeTransformer(SourceUnit, Closure<Boolean>)","url":"%3Cinit%3E(org.codehaus.groovy.control.SourceUnit,groovy.lang.Closure)"},{"p":"asteroid.transformer","c":"AbstractStatementTransformer","l":"AbstractStatementTransformer(SourceUnit, Closure<Boolean>)","url":"%3Cinit%3E(org.codehaus.groovy.control.SourceUnit,groovy.lang.Closure)"},{"p":"asteroid.transformer","c":"AbstractTransformer","l":"AbstractTransformer(SourceUnit)","url":"%3Cinit%3E(org.codehaus.groovy.control.SourceUnit)"},{"p":"asteroid","c":"A","l":"ACC"},{"p":"asteroid.utils","c":"NodeUtils","l":"addAfterCodeBlock(MethodNode, Statement)","url":"addAfterCodeBlock(org.codehaus.groovy.ast.MethodNode,org.codehaus.groovy.ast.stmt.Statement)"},{"p":"asteroid.utils","c":"NodeUtils","l":"addAroundCodeBlock(MethodNode, Statement, Statement)","url":"addAroundCodeBlock(org.codehaus.groovy.ast.MethodNode,org.codehaus.groovy.ast.stmt.Statement,org.codehaus.groovy.ast.stmt.Statement)"},{"p":"asteroid.internal","c":"TransformationUtils","l":"addASTAnnotationsFromTo(ClassNode, CompilePhase)","url":"addASTAnnotationsFromTo(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.control.CompilePhase)"},{"p":"asteroid.utils","c":"NodeUtils","l":"addBeforeCodeBlock(MethodNode, Statement)","url":"addBeforeCodeBlock(org.codehaus.groovy.ast.MethodNode,org.codehaus.groovy.ast.stmt.Statement)"},{"p":"asteroid.statements","c":"TryCatchStatementBuilder","l":"addCatchStmt(Class, String, Statement)","url":"addCatchStmt(java.lang.Class,java.lang.String,org.codehaus.groovy.ast.stmt.Statement)"},{"p":"asteroid.statements","c":"TryCatchStatementBuilder","l":"addCatchStmt(ClassNode, String, Statement)","url":"addCatchStmt(org.codehaus.groovy.ast.ClassNode,java.lang.String,org.codehaus.groovy.ast.stmt.Statement)"},{"p":"asteroid.utils","c":"NodeUtils","l":"addCheckTo(MethodNode)","url":"addCheckTo(org.codehaus.groovy.ast.MethodNode)"},{"p":"asteroid.utils","c":"NodeUtils","l":"addGeneratedField(ClassNode, FieldNode)","url":"addGeneratedField(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.FieldNode)"},{"p":"asteroid.utils","c":"NodeUtils","l":"addGeneratedFieldIfNotPresent(ClassNode, FieldNode)","url":"addGeneratedFieldIfNotPresent(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.FieldNode)"},{"p":"asteroid.utils","c":"NodeUtils","l":"addGeneratedMethod(ClassNode, MethodNode)","url":"addGeneratedMethod(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.MethodNode)"},{"p":"asteroid.utils","c":"NodeUtils","l":"addGeneratedMethodIfNotPresent(ClassNode, MethodNode)","url":"addGeneratedMethodIfNotPresent(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.MethodNode)"},{"p":"asteroid.utils","c":"NodeUtils","l":"addImport(ClassNode, Class, String)","url":"addImport(org.codehaus.groovy.ast.ClassNode,java.lang.Class,java.lang.String)"},{"p":"asteroid.utils","c":"NodeUtils","l":"addImport(ClassNode, Class)","url":"addImport(org.codehaus.groovy.ast.ClassNode,java.lang.Class)"},{"p":"asteroid.utils","c":"NodeUtils","l":"addImport(ClassNode, String, String)","url":"addImport(org.codehaus.groovy.ast.ClassNode,java.lang.String,java.lang.String)"},{"p":"asteroid.utils","c":"NodeUtils","l":"addImport(ClassNode, String)","url":"addImport(org.codehaus.groovy.ast.ClassNode,java.lang.String)"},{"p":"asteroid.utils","c":"NodeUtils","l":"addInterfaces(ClassNode, Class...)","url":"addInterfaces(org.codehaus.groovy.ast.ClassNode,java.lang.Class...)"},{"p":"asteroid.utils","c":"NodeUtils","l":"addInterfaces(ClassNode, ClassNode...)","url":"addInterfaces(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.ClassNode...)"},{"p":"asteroid.utils","c":"NodeUtils","l":"addMethod(ClassNode, MethodNode)","url":"addMethod(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.MethodNode)"},{"p":"asteroid.utils","c":"NodeUtils","l":"addMethodIfNotPresent(ClassNode, MethodNode)","url":"addMethodIfNotPresent(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.MethodNode)"},{"p":"asteroid.utils","c":"NodeUtils","l":"addProperty(ClassNode, PropertyNode)","url":"addProperty(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.PropertyNode)"},{"p":"asteroid.utils","c":"NodeUtils","l":"addPropertyIfNotPresent(ClassNode, PropertyNode)","url":"addPropertyIfNotPresent(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.PropertyNode)"},{"p":"asteroid","c":"Criterias","l":"and(Closure<Boolean>...)","url":"and(groovy.lang.Closure...)"},{"p":"asteroid","c":"Local.TO","l":"ANNOTATED"},{"p":"asteroid.utils","c":"NodeUtils","l":"ANNOTATION_VALUE"},{"p":"asteroid","c":"Nodes","l":"annotation(Class)","url":"annotation(java.lang.Class)"},{"p":"asteroid.nodes","c":"AnnotationNodeBuilder","l":"annotation(Class)","url":"annotation(java.lang.Class)"},{"p":"asteroid","c":"Local","l":"applyTo()"},{"p":"asteroid.utils","c":"StatementUtils","l":"applyToStatementsByLabel(List<StatementUtils.Group>, Map<String, Closure<Statement>>)","url":"applyToStatementsByLabel(java.util.List,java.util.Map)"},{"p":"asteroid.utils","c":"StatementUtils","l":"applyToStatementsByLabelFlatten(List<StatementUtils.Group>, Map<String, Closure<Statement>>)","url":"applyToStatementsByLabelFlatten(java.util.List,java.util.Map)"},{"p":"asteroid.utils","c":"ExpressionUtils","l":"asBinaryExpr(Expression, T, Closure<T>)","url":"asBinaryExpr(org.codehaus.groovy.ast.expr.Expression,T,groovy.lang.Closure)"},{"p":"asteroid.utils","c":"ExpressionUtils","l":"asBinaryExpr(Expression)","url":"asBinaryExpr(org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Statements","l":"assertS(BooleanExpression, String)","url":"assertS(org.codehaus.groovy.ast.expr.BooleanExpression,java.lang.String)"},{"p":"asteroid","c":"Statements","l":"assertS(BooleanExpression)","url":"assertS(org.codehaus.groovy.ast.expr.BooleanExpression)"},{"p":"asteroid","c":"Expressions","l":"binEqX(Expression, Expression)","url":"binEqX(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Expressions","l":"binX(Expression, int, Expression)","url":"binX(org.codehaus.groovy.ast.expr.Expression,int,org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Expressions","l":"binX(String, int, String)","url":"binX(java.lang.String,int,java.lang.String)"},{"p":"asteroid","c":"Statements","l":"blockS(List<Statement>)","url":"blockS(java.util.List)"},{"p":"asteroid","c":"Statements","l":"blockS(Statement...)","url":"blockS(org.codehaus.groovy.ast.stmt.Statement...)"},{"p":"asteroid","c":"Statements","l":"blockS(VariableScope, List<Statement>)","url":"blockS(org.codehaus.groovy.ast.VariableScope,java.util.List)"},{"p":"asteroid","c":"Statements","l":"blockS(VariableScope, Statement...)","url":"blockS(org.codehaus.groovy.ast.VariableScope,org.codehaus.groovy.ast.stmt.Statement...)"},{"p":"asteroid","c":"Statements","l":"blockSFromString(String)","url":"blockSFromString(java.lang.String)"},{"p":"asteroid","c":"Expressions","l":"boolEqualsNullX(Expression)","url":"boolEqualsNullX(org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Expressions","l":"boolHasSameFieldX(FieldNode, Expression)","url":"boolHasSameFieldX(org.codehaus.groovy.ast.FieldNode,org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Expressions","l":"boolHasSamePropertyX(PropertyNode, Expression)","url":"boolHasSamePropertyX(org.codehaus.groovy.ast.PropertyNode,org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Expressions","l":"boolIsInstanceOfX(Expression, Class)","url":"boolIsInstanceOfX(org.codehaus.groovy.ast.expr.Expression,java.lang.Class)"},{"p":"asteroid","c":"Expressions","l":"boolIsInstanceOfX(Expression, ClassNode)","url":"boolIsInstanceOfX(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.ClassNode)"},{"p":"asteroid","c":"Expressions","l":"boolIsOneX(Expression)","url":"boolIsOneX(org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Expressions","l":"boolIsTrueX(Expression)","url":"boolIsTrueX(org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Expressions","l":"boolIsZeroX(Expression)","url":"boolIsZeroX(org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Expressions","l":"boolNotNullX(Expression)","url":"boolNotNullX(org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Expressions","l":"boolSameX(Expression, Expression)","url":"boolSameX(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Expressions","l":"boolX(Expression, int, Expression)","url":"boolX(org.codehaus.groovy.ast.expr.Expression,int,org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Expressions","l":"boolX(Expression)","url":"boolX(org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Expressions","l":"boolX(String, int, String)","url":"boolX(java.lang.String,int,java.lang.String)"},{"p":"asteroid.nodes","c":"AnnotationNodeBuilder","l":"build()"},{"p":"asteroid.nodes","c":"ClassNodeBuilder","l":"build()"},{"p":"asteroid.nodes","c":"ConstructorNodeBuilder","l":"build()"},{"p":"asteroid.nodes","c":"FieldNodeBuilder","l":"build()"},{"p":"asteroid.nodes","c":"GenericsTypeBuilder","l":"build()"},{"p":"asteroid.nodes","c":"MethodNodeBuilder","l":"build()"},{"p":"asteroid.nodes","c":"ParameterNodeBuilder","l":"build()"},{"p":"asteroid.nodes","c":"PropertyNodeBuilder","l":"build()"},{"p":"asteroid.statements","c":"TryCatchStatementBuilder","l":"build()"},{"p":"asteroid","c":"Criterias","l":"byAnnotation(Class)","url":"byAnnotation(java.lang.Class)"},{"p":"asteroid","c":"Criterias","l":"byAnnotationSimpleName(String)","url":"byAnnotationSimpleName(java.lang.String)"},{"p":"asteroid","c":"Criterias","l":"byClassNodeNameContains(String)","url":"byClassNodeNameContains(java.lang.String)"},{"p":"asteroid","c":"Criterias","l":"byClassNodeNameEndsWith(String)","url":"byClassNodeNameEndsWith(java.lang.String)"},{"p":"asteroid","c":"Criterias","l":"byClassNodeNameStartsWith(String)","url":"byClassNodeNameStartsWith(java.lang.String)"},{"p":"asteroid","c":"Criterias","l":"byExprAny()"},{"p":"asteroid","c":"Criterias","l":"byExprBinaryUsingToken(int)"},{"p":"asteroid","c":"Criterias","l":"byExprMethodCallByArgs(Class...)","url":"byExprMethodCallByArgs(java.lang.Class...)"},{"p":"asteroid","c":"Criterias","l":"byExprMethodCallByName(String)","url":"byExprMethodCallByName(java.lang.String)"},{"p":"asteroid","c":"Criterias","l":"byMethodNodeName(String)","url":"byMethodNodeName(java.lang.String)"},{"p":"asteroid","c":"Criterias","l":"byMethodNodeNameContains(String)","url":"byMethodNodeNameContains(java.lang.String)"},{"p":"asteroid","c":"Criterias","l":"byMethodNodeNameEndsWith(String)","url":"byMethodNodeNameEndsWith(java.lang.String)"},{"p":"asteroid","c":"Criterias","l":"byMethodNodeNameStartsWith(String)","url":"byMethodNodeNameStartsWith(java.lang.String)"},{"p":"asteroid","c":"Criterias","l":"byStmtByType(Class<T>)","url":"byStmtByType(java.lang.Class)"},{"p":"asteroid","c":"Expressions","l":"callSuperX(String, Expression...)","url":"callSuperX(java.lang.String,org.codehaus.groovy.ast.expr.Expression...)"},{"p":"asteroid","c":"Expressions","l":"callSuperX(String)","url":"callSuperX(java.lang.String)"},{"p":"asteroid","c":"Expressions","l":"callThisX(String, Expression...)","url":"callThisX(java.lang.String,org.codehaus.groovy.ast.expr.Expression...)"},{"p":"asteroid","c":"Expressions","l":"callX(Expression, String, Expression...)","url":"callX(org.codehaus.groovy.ast.expr.Expression,java.lang.String,org.codehaus.groovy.ast.expr.Expression...)"},{"p":"asteroid","c":"Phase.GLOBAL","l":"CANONICALIZATION"},{"p":"asteroid","c":"Phase.LOCAL","l":"CANONICALIZATION"},{"p":"asteroid","c":"Phase.GLOBAL","l":"CLASS_GENERATION"},{"p":"asteroid","c":"Phase.LOCAL","l":"CLASS_GENERATION"},{"p":"asteroid","c":"Expressions","l":"classX(Class)","url":"classX(java.lang.Class)"},{"p":"asteroid","c":"Expressions","l":"classX(ClassNode)","url":"classX(org.codehaus.groovy.ast.ClassNode)"},{"p":"asteroid","c":"Nodes","l":"clazz(Class)","url":"clazz(java.lang.Class)"},{"p":"asteroid.nodes","c":"ClassNodeBuilder","l":"clazz(Class<?>)","url":"clazz(java.lang.Class)"},{"p":"asteroid","c":"Nodes","l":"clazz(String)","url":"clazz(java.lang.String)"},{"p":"asteroid.nodes","c":"ClassNodeBuilder","l":"clazz(String)","url":"clazz(java.lang.String)"},{"p":"asteroid","c":"Nodes","l":"clazzWithGenerics(Class, GenericsType...)","url":"clazzWithGenerics(java.lang.Class,org.codehaus.groovy.ast.GenericsType...)"},{"p":"asteroid.nodes","c":"ClassNodeBuilder","l":"clazzWithGenerics(Class<?>, GenericsType...)","url":"clazzWithGenerics(java.lang.Class,org.codehaus.groovy.ast.GenericsType...)"},{"p":"asteroid","c":"Expressions","l":"closureX(Statement, Parameter...)","url":"closureX(org.codehaus.groovy.ast.stmt.Statement,org.codehaus.groovy.ast.Parameter...)"},{"p":"asteroid.nodes","c":"ConstructorNodeBuilder","l":"code(Statement)","url":"code(org.codehaus.groovy.ast.stmt.Statement)"},{"p":"asteroid.nodes","c":"MethodNodeBuilder","l":"code(Statement)","url":"code(org.codehaus.groovy.ast.stmt.Statement)"},{"p":"asteroid.utils","c":"InternalUtils","l":"collect(Collection<T>)","url":"collect(java.util.Collection)"},{"p":"asteroid.utils","c":"InternalUtils","l":"collect(Object, Closure<T>)","url":"collect(java.lang.Object,groovy.lang.Closure)"},{"p":"asteroid","c":"Local.TO","l":"CONSTRUCTOR"},{"p":"asteroid","c":"Nodes","l":"constructor(int)"},{"p":"asteroid.nodes","c":"ConstructorNodeBuilder","l":"constructor(int)"},{"p":"asteroid","c":"Expressions","l":"constX(Object, Boolean)","url":"constX(java.lang.Object,java.lang.Boolean)"},{"p":"asteroid","c":"Expressions","l":"constX(Object)","url":"constX(java.lang.Object)"},{"p":"asteroid","c":"Phase.GLOBAL","l":"CONVERSION"},{"p":"asteroid.utils","c":"StatementUtils.Group","l":"copyWithStatements(List<Statement>)","url":"copyWithStatements(java.util.List)"},{"p":"asteroid","c":"A","l":"CRITERIA"},{"p":"asteroid","c":"Criterias","l":"Criterias()","url":"%3Cinit%3E()"},{"p":"asteroid","c":"Statements","l":"ctorSuperS(Expression...)","url":"ctorSuperS(org.codehaus.groovy.ast.expr.Expression...)"},{"p":"asteroid.internal","c":"PhaseTransformation","l":"doVisit(AnnotationNode, ClassNode)","url":"doVisit(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.ClassNode)"},{"p":"asteroid","c":"AbstractLocalTransformation","l":"doVisit(AnnotationNode, S)","url":"doVisit(org.codehaus.groovy.ast.AnnotationNode,S)"},{"p":"asteroid","c":"Statements","l":"doWhileS(BooleanExpression, Statement)","url":"doWhileS(org.codehaus.groovy.ast.expr.BooleanExpression,org.codehaus.groovy.ast.stmt.Statement)"},{"p":"asteroid","c":"Statements","l":"doWhileStatement(BooleanExpression, Statement)","url":"doWhileStatement(org.codehaus.groovy.ast.expr.BooleanExpression,org.codehaus.groovy.ast.stmt.Statement)"},{"p":"asteroid","c":"Statements","l":"emptyS()"},{"p":"asteroid","c":"Statements","l":"emptyStatement()"},{"p":"asteroid.transformer","c":"AbstractExpressionTransformer","l":"everything()"},{"p":"asteroid.nodes","c":"MethodNodeBuilder","l":"exceptions(ClassNode...)","url":"exceptions(org.codehaus.groovy.ast.ClassNode...)"},{"p":"asteroid","c":"A","l":"EXPR"},{"p":"asteroid","c":"Utils","l":"EXPR"},{"p":"asteroid.utils","c":"StatementUtils.Label","l":"expression"},{"p":"asteroid.nodes","c":"FieldNodeBuilder","l":"expression(Expression)","url":"expression(org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Expressions","l":"Expressions()","url":"%3Cinit%3E()"},{"p":"asteroid.utils","c":"ExpressionUtils","l":"ExpressionUtils()","url":"%3Cinit%3E()"},{"p":"asteroid.utils","c":"StatementUtils","l":"extractLabelFrom(Statement)","url":"extractLabelFrom(org.codehaus.groovy.ast.stmt.Statement)"},{"p":"asteroid","c":"Local.TO","l":"FIELD"},{"p":"asteroid","c":"Nodes","l":"field(String)","url":"field(java.lang.String)"},{"p":"asteroid.nodes","c":"FieldNodeBuilder","l":"field(String)","url":"field(java.lang.String)"},{"p":"asteroid","c":"Expressions","l":"fieldX(FieldNode)","url":"fieldX(org.codehaus.groovy.ast.FieldNode)"},{"p":"asteroid","c":"Phase.GLOBAL","l":"FINALIZATION"},{"p":"asteroid","c":"Phase.LOCAL","l":"FINALIZATION"},{"p":"asteroid.statements","c":"TryCatchStatementBuilder","l":"finallyStmt(Statement)","url":"finallyStmt(org.codehaus.groovy.ast.stmt.Statement)"},{"p":"asteroid.utils","c":"NodeUtils","l":"findAllMethodByName(ClassNode, String)","url":"findAllMethodByName(org.codehaus.groovy.ast.ClassNode,java.lang.String)"},{"p":"asteroid.utils","c":"NodeUtils","l":"findFieldByName(ClassNode, String)","url":"findFieldByName(org.codehaus.groovy.ast.ClassNode,java.lang.String)"},{"p":"asteroid.utils","c":"NodeUtils","l":"findMethodByName(ClassNode, String)","url":"findMethodByName(org.codehaus.groovy.ast.ClassNode,java.lang.String)"},{"p":"asteroid","c":"Nodes","l":"generics(ClassNode)","url":"generics(org.codehaus.groovy.ast.ClassNode)"},{"p":"asteroid.nodes","c":"GenericsTypeBuilder","l":"generics(ClassNode)","url":"generics(org.codehaus.groovy.ast.ClassNode)"},{"p":"asteroid.nodes","c":"ClassNodeBuilder","l":"genericsPlaceHolder(Boolean)","url":"genericsPlaceHolder(java.lang.Boolean)"},{"p":"asteroid.nodes","c":"ClassNodeBuilder","l":"genericsTypes(GenericsType...)","url":"genericsTypes(org.codehaus.groovy.ast.GenericsType...)"},{"p":"asteroid.utils","c":"NodeUtils","l":"get(AnnotationNode, Class<T>)","url":"get(org.codehaus.groovy.ast.AnnotationNode,java.lang.Class)"},{"p":"asteroid.utils","c":"NodeUtils","l":"get(AnnotationNode, String, Class<T>)","url":"get(org.codehaus.groovy.ast.AnnotationNode,java.lang.String,java.lang.Class)"},{"p":"asteroid.utils","c":"NodeUtils","l":"getAnnotationFrom(ClassNode, ClassNode)","url":"getAnnotationFrom(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.ClassNode)"},{"p":"asteroid.utils","c":"NodeUtils","l":"getAnnotationFrom(ClassNode, String)","url":"getAnnotationFrom(org.codehaus.groovy.ast.ClassNode,java.lang.String)"},{"p":"asteroid.utils","c":"ExpressionUtils","l":"getArgumentByIndexAs(ArgumentListExpression, Integer, Class<U>)","url":"getArgumentByIndexAs(org.codehaus.groovy.ast.expr.ArgumentListExpression,java.lang.Integer,java.lang.Class)"},{"p":"asteroid.utils","c":"ExpressionUtils","l":"getArgumentByIndexAs(MethodCallExpression, Integer, Class<U>)","url":"getArgumentByIndexAs(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.Integer,java.lang.Class)"},{"p":"asteroid.utils","c":"ExpressionUtils","l":"getArgumentList(MethodCallExpression)","url":"getArgumentList(org.codehaus.groovy.ast.expr.MethodCallExpression)"},{"p":"asteroid.utils","c":"NodeUtils","l":"getCodeBlock(MethodNode)","url":"getCodeBlock(org.codehaus.groovy.ast.MethodNode)"},{"p":"asteroid.internal","c":"TransformationUtils","l":"getCompilePhaseAsPropertyExpression(CompilePhase)","url":"getCompilePhaseAsPropertyExpression(org.codehaus.groovy.control.CompilePhase)"},{"p":"asteroid.utils","c":"ExpressionUtils","l":"getFirstArgumentAs(ArgumentListExpression, Class<U>)","url":"getFirstArgumentAs(org.codehaus.groovy.ast.expr.ArgumentListExpression,java.lang.Class)"},{"p":"asteroid.utils","c":"ExpressionUtils","l":"getFirstArgumentAs(MethodCallExpression, Class<U>)","url":"getFirstArgumentAs(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.Class)"},{"p":"asteroid.utils","c":"NodeUtils","l":"getFirstNodeAs(ASTNode[], Class<T>)","url":"getFirstNodeAs(org.codehaus.groovy.ast.ASTNode[],java.lang.Class)"},{"p":"asteroid.internal","c":"TransformationUtils","l":"getGroovyAnnotation(CompilePhase)","url":"getGroovyAnnotation(org.codehaus.groovy.control.CompilePhase)"},{"p":"asteroid.internal","c":"TransformationUtils","l":"getInheritConstructorsAnnotation()"},{"p":"asteroid.utils","c":"NodeUtils","l":"getInstancePropertyFields(ClassNode)","url":"getInstancePropertyFields(org.codehaus.groovy.ast.ClassNode)"},{"p":"asteroid.utils","c":"ExpressionUtils","l":"getLastArgumentAs(ArgumentListExpression, Class<U>)","url":"getLastArgumentAs(org.codehaus.groovy.ast.expr.ArgumentListExpression,java.lang.Class)"},{"p":"asteroid.utils","c":"ExpressionUtils","l":"getLastArgumentAs(MethodCallExpression, Class<U>)","url":"getLastArgumentAs(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.Class)"},{"p":"asteroid.utils","c":"NodeUtils","l":"getLastNodeAs(ASTNode[], Class<T>)","url":"getLastNodeAs(org.codehaus.groovy.ast.ASTNode[],java.lang.Class)"},{"p":"asteroid.transformer","c":"AbstractTransformer","l":"getModule()"},{"p":"asteroid.transformer","c":"AbstractTransformer","l":"getModulePackageName()"},{"p":"asteroid.transformer","c":"AbstractTransformer","l":"getSourceUnit()"},{"p":"asteroid.utils","c":"NodeUtils","l":"getStringValue(AnnotationNode)","url":"getStringValue(org.codehaus.groovy.ast.AnnotationNode)"},{"p":"asteroid.utils","c":"ExpressionUtils","l":"getText(Expression)","url":"getText(org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"AbstractGlobalTransformation","l":"getTransformers()"},{"p":"asteroid.internal","c":"GlobalTransformationTransformation","l":"getTransformers()"},{"p":"asteroid","c":"Phase.GLOBAL","l":"GLOBAL()","url":"%3Cinit%3E()"},{"p":"asteroid.internal","c":"GlobalTransformationTransformation","l":"GlobalTransformationTransformation()","url":"%3Cinit%3E()"},{"p":"asteroid.utils","c":"StatementUtils","l":"groupStatementsByLabel(BlockStatement)","url":"groupStatementsByLabel(org.codehaus.groovy.ast.stmt.BlockStatement)"},{"p":"asteroid.utils","c":"ExpressionUtils","l":"hasArguments(MethodCallExpression)","url":"hasArguments(org.codehaus.groovy.ast.expr.MethodCallExpression)"},{"p":"asteroid.utils","c":"NodeUtils","l":"hasField(ClassNode, String)","url":"hasField(org.codehaus.groovy.ast.ClassNode,java.lang.String)"},{"p":"asteroid.utils","c":"NodeUtils","l":"hasFieldOfType(ClassNode, String)","url":"hasFieldOfType(org.codehaus.groovy.ast.ClassNode,java.lang.String)"},{"p":"asteroid","c":"Statements","l":"ifElseS(BooleanExpression, Statement, Statement)","url":"ifElseS(org.codehaus.groovy.ast.expr.BooleanExpression,org.codehaus.groovy.ast.stmt.Statement,org.codehaus.groovy.ast.stmt.Statement)"},{"p":"asteroid","c":"Statements","l":"ifS(BooleanExpression, Statement)","url":"ifS(org.codehaus.groovy.ast.expr.BooleanExpression,org.codehaus.groovy.ast.stmt.Statement)"},{"p":"asteroid","c":"Phase.GLOBAL","l":"INITIALIZATION"},{"p":"asteroid.nodes","c":"PropertyNodeBuilder","l":"initialValueExpression(Expression)","url":"initialValueExpression(org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Phase.GLOBAL","l":"INSTRUCTION_SELECTION"},{"p":"asteroid","c":"Phase.LOCAL","l":"INSTRUCTION_SELECTION"},{"p":"asteroid.utils","c":"ExpressionUtils","l":"isBinaryExpr(Expression, int)","url":"isBinaryExpr(org.codehaus.groovy.ast.expr.Expression,int)"},{"p":"asteroid.utils","c":"ExpressionUtils","l":"isBinaryExpr(Expression)","url":"isBinaryExpr(org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid.utils","c":"ExpressionUtils","l":"isListExpr(Expression)","url":"isListExpr(org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid.utils","c":"ExpressionUtils","l":"isMethodCallExpr(Expression)","url":"isMethodCallExpr(org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid.utils","c":"NodeUtils","l":"isOrExtends(ClassNode, Class)","url":"isOrExtends(org.codehaus.groovy.ast.ClassNode,java.lang.Class)"},{"p":"asteroid.utils","c":"NodeUtils","l":"isOrExtends(ClassNode, ClassNode)","url":"isOrExtends(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.ClassNode)"},{"p":"asteroid.utils","c":"NodeUtils","l":"isOrExtends(ClassNode, String)","url":"isOrExtends(org.codehaus.groovy.ast.ClassNode,java.lang.String)"},{"p":"asteroid.utils","c":"NodeUtils","l":"isOrExtendsUnsafe(ClassNode, ClassNode)","url":"isOrExtendsUnsafe(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.ClassNode)"},{"p":"asteroid.utils","c":"NodeUtils","l":"isOrImplements(Class, Class)","url":"isOrImplements(java.lang.Class,java.lang.Class)"},{"p":"asteroid.utils","c":"NodeUtils","l":"isOrImplements(ClassNode, Class)","url":"isOrImplements(org.codehaus.groovy.ast.ClassNode,java.lang.Class)"},{"p":"asteroid.utils","c":"NodeUtils","l":"isOrImplements(ClassNode, String)","url":"isOrImplements(org.codehaus.groovy.ast.ClassNode,java.lang.String)"},{"p":"asteroid.utils","c":"StatementUtils.Group","l":"label"},{"p":"asteroid","c":"Expressions","l":"landX(Expression, Expression)","url":"landX(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid.utils","c":"ExpressionUtils","l":"leftExprAs(BinaryExpression, Class<T>)","url":"leftExprAs(org.codehaus.groovy.ast.expr.BinaryExpression,java.lang.Class)"},{"p":"asteroid","c":"Expressions","l":"listX(Expression...)","url":"listX(org.codehaus.groovy.ast.expr.Expression...)"},{"p":"asteroid","c":"Local.TO","l":"LOCAL_VARIABLE"},{"p":"asteroid","c":"Phase.LOCAL","l":"LOCAL()","url":"%3Cinit%3E()"},{"p":"asteroid.internal","c":"LocalTransformation","l":"LocalTransformation()","url":"%3Cinit%3E()"},{"p":"asteroid","c":"Expressions","l":"lorX(Expression, Expression)","url":"lorX(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Expressions","l":"mapEntryX(Expression, Expression)","url":"mapEntryX(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Expressions","l":"mapEntryX(String, Expression)","url":"mapEntryX(java.lang.String,org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Expressions","l":"mapX(List<MapEntryExpression>)","url":"mapX(java.util.List)"},{"p":"asteroid","c":"Expressions","l":"mapX(MapEntryExpression...)","url":"mapX(org.codehaus.groovy.ast.expr.MapEntryExpression...)"},{"p":"asteroid.nodes","c":"AnnotationNodeBuilder","l":"member(String, Expression)","url":"member(java.lang.String,org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Local.TO","l":"METHOD"},{"p":"asteroid","c":"Nodes","l":"method(String)","url":"method(java.lang.String)"},{"p":"asteroid.nodes","c":"MethodNodeBuilder","l":"method(String)","url":"method(java.lang.String)"},{"p":"asteroid","c":"Modifiers","l":"Modifiers()","url":"%3Cinit%3E()"},{"p":"asteroid.nodes","c":"FieldNodeBuilder","l":"modifiers(int)"},{"p":"asteroid.nodes","c":"MethodNodeBuilder","l":"modifiers(int)"},{"p":"asteroid.nodes","c":"PropertyNodeBuilder","l":"modifiers(int)"},{"p":"asteroid.utils","c":"StatementUtils.Label","l":"name"},{"p":"asteroid.utils","c":"StatementUtils.Label","l":"nameAsExpression()"},{"p":"asteroid","c":"Expressions","l":"newX(Class, Expression...)","url":"newX(java.lang.Class,org.codehaus.groovy.ast.expr.Expression...)"},{"p":"asteroid","c":"Expressions","l":"newX(Class)","url":"newX(java.lang.Class)"},{"p":"asteroid","c":"Utils","l":"NODE"},{"p":"asteroid","c":"A","l":"NODES"},{"p":"asteroid","c":"Nodes","l":"Nodes()","url":"%3Cinit%3E()"},{"p":"asteroid.utils","c":"NodeUtils","l":"NodeUtils()","url":"%3Cinit%3E()"},{"p":"asteroid","c":"Expressions","l":"notX(Expression)","url":"notX(org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Criterias","l":"or(Closure<Boolean>...)","url":"or(groovy.lang.Closure...)"},{"p":"asteroid","c":"Phase.GLOBAL","l":"OUTPUT"},{"p":"asteroid","c":"Phase.LOCAL","l":"OUTPUT"},{"p":"asteroid.nodes","c":"FieldNodeBuilder","l":"owner(ClassNode)","url":"owner(org.codehaus.groovy.ast.ClassNode)"},{"p":"asteroid.nodes","c":"PropertyNodeBuilder","l":"owner(ClassNode)","url":"owner(org.codehaus.groovy.ast.ClassNode)"},{"p":"asteroid","c":"Local.TO","l":"PACKAGE"},{"p":"asteroid","c":"Nodes","l":"param(String)","url":"param(java.lang.String)"},{"p":"asteroid.nodes","c":"ParameterNodeBuilder","l":"param(String)","url":"param(java.lang.String)"},{"p":"asteroid","c":"Local.TO","l":"PARAMETER"},{"p":"asteroid.nodes","c":"ParameterNodeBuilder","l":"ParameterNodeBuilder(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"asteroid.nodes","c":"MethodNodeBuilder","l":"parameters(Parameter...)","url":"parameters(org.codehaus.groovy.ast.Parameter...)"},{"p":"asteroid","c":"Phase.GLOBAL","l":"PARSING"},{"p":"asteroid.internal","c":"PhaseTransformation","l":"PhaseTransformation()","url":"%3Cinit%3E()"},{"p":"asteroid","c":"Nodes","l":"property(String)","url":"property(java.lang.String)"},{"p":"asteroid.nodes","c":"PropertyNodeBuilder","l":"property(String)","url":"property(java.lang.String)"},{"p":"asteroid","c":"Expressions","l":"propX(Expression, Expression)","url":"propX(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid.utils","c":"NodeUtils","l":"removeAnnotation(AnnotatedNode, AnnotationNode)","url":"removeAnnotation(org.codehaus.groovy.ast.AnnotatedNode,org.codehaus.groovy.ast.AnnotationNode)"},{"p":"asteroid","c":"Statements","l":"returnS(Expression)","url":"returnS(org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid.nodes","c":"MethodNodeBuilder","l":"returnType(Class)","url":"returnType(java.lang.Class)"},{"p":"asteroid.utils","c":"ExpressionUtils","l":"rightExprAs(BinaryExpression, Class<T>)","url":"rightExprAs(org.codehaus.groovy.ast.expr.BinaryExpression,java.lang.Class)"},{"p":"asteroid","c":"Expressions","l":"safeCallX(Expression, String, Expression...)","url":"safeCallX(org.codehaus.groovy.ast.expr.Expression,java.lang.String,org.codehaus.groovy.ast.expr.Expression...)"},{"p":"asteroid","c":"Phase.GLOBAL","l":"SEMANTIC_ANALYSIS"},{"p":"asteroid","c":"Phase.LOCAL","l":"SEMANTIC_ANALYSIS"},{"p":"asteroid.utils","c":"StatementUtils.Group","l":"statements"},{"p":"asteroid","c":"Statements","l":"Statements()","url":"%3Cinit%3E()"},{"p":"asteroid.utils","c":"StatementUtils","l":"StatementUtils()","url":"%3Cinit%3E()"},{"p":"asteroid","c":"Expressions","l":"staticCallX(Class, String, Expression...)","url":"staticCallX(java.lang.Class,java.lang.String,org.codehaus.groovy.ast.expr.Expression...)"},{"p":"asteroid","c":"Expressions","l":"staticCallX(ClassNode, String, Expression...)","url":"staticCallX(org.codehaus.groovy.ast.ClassNode,java.lang.String,org.codehaus.groovy.ast.expr.Expression...)"},{"p":"asteroid","c":"A","l":"STMT"},{"p":"asteroid","c":"Utils","l":"STMT"},{"p":"asteroid","c":"Statements","l":"stmt(Expression)","url":"stmt(org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Statements","l":"throwS(Expression)","url":"throwS(org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid.transformer","c":"AbstractExpressionTransformer","l":"transform(Expression)","url":"transform(org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid.internal","c":"TranslateToGlobalTransform","l":"transformClass(ClassNode)","url":"transformClass(org.codehaus.groovy.ast.ClassNode)"},{"p":"asteroid.transformer","c":"AbstractClassNodeTransformer","l":"transformClass(ClassNode)","url":"transformClass(org.codehaus.groovy.ast.ClassNode)"},{"p":"asteroid.transformer","c":"AbstractExpressionTransformer","l":"transformExpression(T)"},{"p":"asteroid.transformer","c":"AbstractMethodNodeTransformer","l":"transformMethod(MethodNode)","url":"transformMethod(org.codehaus.groovy.ast.MethodNode)"},{"p":"asteroid.transformer","c":"AbstractStatementTransformer","l":"transformStatement(T)"},{"p":"asteroid.internal","c":"TranslateToGlobalTransform","l":"TranslateToGlobalTransform(SourceUnit)","url":"%3Cinit%3E(org.codehaus.groovy.control.SourceUnit)"},{"p":"asteroid","c":"Statements","l":"tryCatchSBuilder()"},{"p":"asteroid.statements","c":"TryCatchStatementBuilder","l":"TryCatchStatementBuilder()","url":"%3Cinit%3E()"},{"p":"asteroid.statements","c":"TryCatchStatementBuilder","l":"tryStmt(Statement)","url":"tryStmt(org.codehaus.groovy.ast.stmt.Statement)"},{"p":"asteroid","c":"Local.TO","l":"TYPE"},{"p":"asteroid.nodes","c":"PropertyNodeBuilder","l":"type(Class)","url":"type(java.lang.Class)"},{"p":"asteroid.nodes","c":"FieldNodeBuilder","l":"type(Class<?>)","url":"type(java.lang.Class)"},{"p":"asteroid.nodes","c":"FieldNodeBuilder","l":"type(ClassNode)","url":"type(org.codehaus.groovy.ast.ClassNode)"},{"p":"asteroid.nodes","c":"ParameterNodeBuilder","l":"type(ClassNode)","url":"type(org.codehaus.groovy.ast.ClassNode)"},{"p":"asteroid.nodes","c":"ClassNodeBuilder","l":"usingGenerics(Boolean)","url":"usingGenerics(java.lang.Boolean)"},{"p":"asteroid","c":"A","l":"UTIL"},{"p":"asteroid","c":"Utils","l":"Utils()","url":"%3Cinit%3E()"},{"p":"asteroid","c":"Local","l":"value()"},{"p":"asteroid","c":"Phase","l":"value()"},{"p":"asteroid","c":"Local.TO","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"asteroid","c":"Local.TO","l":"values()"},{"p":"asteroid","c":"Expressions","l":"varDeclarationX(String, Class, Expression)","url":"varDeclarationX(java.lang.String,java.lang.Class,org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Expressions","l":"varDeclarationX(String, ClassNode, Expression)","url":"varDeclarationX(java.lang.String,org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.expr.Expression)"},{"p":"asteroid","c":"Expressions","l":"varX(String, ClassNode)","url":"varX(java.lang.String,org.codehaus.groovy.ast.ClassNode)"},{"p":"asteroid","c":"Expressions","l":"varX(String)","url":"varX(java.lang.String)"},{"p":"asteroid","c":"AbstractGlobalTransformation","l":"visit(ASTNode[], SourceUnit)","url":"visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)"},{"p":"asteroid","c":"AbstractLocalTransformation","l":"visit(ASTNode[], SourceUnit)","url":"visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)"},{"p":"asteroid.internal","c":"LocalTransformation","l":"visit(ASTNode[], SourceUnit)","url":"visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)"},{"p":"asteroid.transformer","c":"AbstractClassNodeTransformer","l":"visitClass(ClassNode)","url":"visitClass(org.codehaus.groovy.ast.ClassNode)"},{"p":"asteroid.transformer","c":"Transformer","l":"visitClass(ClassNode)","url":"visitClass(org.codehaus.groovy.ast.ClassNode)"},{"p":"asteroid.transformer","c":"AbstractMethodNodeTransformer","l":"visitMethod(MethodNode)","url":"visitMethod(org.codehaus.groovy.ast.MethodNode)"},{"p":"asteroid.transformer","c":"AbstractStatementTransformer","l":"visitStatement(Statement)","url":"visitStatement(org.codehaus.groovy.ast.stmt.Statement)"},{"p":"asteroid","c":"Statements","l":"whileS(BooleanExpression, Statement)","url":"whileS(org.codehaus.groovy.ast.expr.BooleanExpression,org.codehaus.groovy.ast.stmt.Statement)"}]